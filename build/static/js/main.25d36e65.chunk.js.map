{"version":3,"sources":["components/routing/PrivateRoute.js","components/screen/PrivateScreen.js","components/screen/LoginScreen.js","components/screen/RegisterScreen.js","components/screen/ForgotPasswordScreen.js","components/screen/ResetPasswordScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","PrivateScreen","history","useState","error","setError","privateData","setPrivateData","useEffect","push","fetchPrivateDate","a","config","headers","Authorization","axios","get","data","removeItem","className","onClick","LoginScreen","email","setEmail","password","setPassword","loginHandler","e","preventDefault","header","post","setItem","token","response","setTimeout","onSubmit","htmlFor","type","required","id","placeholder","onChange","target","value","tabIndex","autoComplete","RegisterScreen","username","setUsername","confirmpassword","setConfirmPassword","registerHandler","ForgotPasswordScreen","success","setSuccess","forgotPasswordHandler","ResetPasswordScreen","match","confirmPassword","resetPasswordHandler","put","params","resetToken","console","log","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25d36e65.chunk.js","sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"authToken\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\n\r\nconst PrivateScreen = ({ history }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const fetchPrivateDate = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const { data } = await axios.get(\r\n          \"https://login-auth123.herokuapp.com/api/private\",\r\n          config\r\n        );\r\n        setPrivateData(data.data);\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n      }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n  }, [history]);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <>\r\n      <div>{privateData}</div>\r\n      <button onClick={logoutHandler}>LogOut</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LoginScreen.css\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://login-auth123.herokuapp.com/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n        <h3 className=\"login-screen__title\">Login</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"formTag\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            tabIndex={1}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"formTag\">\r\n            Password:{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            tabIndex={2}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n\r\n        <span className=\"login-screen__subtext\">\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </span>\r\n        <span>\r\n          {\" \"}\r\n          <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n            Forgot Password?\r\n          </Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://login-auth123.herokuapp.com/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">Register</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ForgotPasswordScreen.css\";\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const forgotPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://login-auth123.herokuapp.com/api/auth/forgotpassword\",\r\n        { email },\r\n        config\r\n      );\r\n\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setEmail(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgotpassword-screen\">\r\n      <form\r\n        onSubmit={forgotPasswordHandler}\r\n        className=\"forgotpassword-screen__form\"\r\n      >\r\n        <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        {success && <span className=\"success-message\">{success}</span>}\r\n        <div className=\"form-group\">\r\n          <p className=\"forgotpassword-screen__subtext\">\r\n            Please enter the registered email.\r\n          </p>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Send Email\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({ match }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords don't match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `https://login-auth123.herokuapp.com/api/auth/passwordreset/${match.params.resetToken}`,\r\n        {\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data);\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetpassword-screen\">\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"resetpassword-screen__form\"\r\n      >\r\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error} </span>}\r\n        {success && (\r\n          <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm new password\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\nimport PrivateScreen from \"./components/screen/PrivateScreen\";\nimport LoginScreen from \"./components/screen/LoginScreen\";\nimport RegisterScreen from \"./components/screen/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screen/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screen/ResetPasswordScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PrivateScreen} />\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/register\" component={RegisterScreen} />\n          <Route\n            exact\n            path=\"/forgotpassword\"\n            component={ForgotPasswordScreen}\n          />\n          <Route\n            exact\n            path=\"/passwordreset/:resetToken\"\n            component={ResetPasswordScreen}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}